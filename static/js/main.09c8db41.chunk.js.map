{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","height","weight","total","type","event","target","value","this","setState","preventDefault","totalPrecision","toPrecision","wallpaper","document","querySelector","heightEnter","weightEnter","style","backgroundImage","display","isNaN","className","onSubmit","handleSubmit","htmlFor","name","step","onChange","handleHeight","id","handleWeight","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+PAiGeA,E,kDA7Fb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,OAAQ,GACRC,OAAQ,GACRC,MAAO,GACPC,KAAM,IANI,E,gDAUd,SAAaC,GACX,IAAMJ,EAASI,EAAMC,OAAOC,MAC5BC,KAAKC,SAAS,CAACR,OAAQA,M,0BAGzB,SAAaI,GACX,IAAMH,EAASG,EAAMC,OAAOC,MAC5BC,KAAKC,SAAS,CAACP,OAAQA,M,0BAGzB,SAAaG,GACXA,EAAMK,iBAEN,IAAIP,EAAQK,KAAKR,MAAME,QAAUM,KAAKR,MAAMC,OAASO,KAAKR,MAAMC,QAC5DU,EAAiBR,EAAMS,YAAY,GACvCJ,KAAKC,SAAS,CAACN,MAAOQ,IAEtB,IAAIE,EAAYC,SAASC,cAAc,QACnCC,EAAcF,SAASC,cAAc,iBACrCE,EAAcH,SAASC,cAAc,iBAErCJ,GAAkB,MACpBH,KAAKC,SAAS,CAACL,KAAM,gBACrBS,EAAUK,MAAMC,gBAAkB,oCACzBR,EAAiB,MAAQA,GAAkB,MACpDH,KAAKC,SAAS,CAACL,KAAM,mBACrBS,EAAUK,MAAMC,gBAAkB,kCACzBR,GAAkB,IAAMA,GAAkB,MACnDH,KAAKC,SAAS,CAACL,KAAM,eACrBS,EAAUK,MAAMC,gBAAkB,mCACzBR,GAAkB,IAC3BH,KAAKC,SAAS,CAACL,KAAM,UACrBS,EAAUK,MAAMC,gBAAkB,iCAElCX,KAAKC,SAAS,CAACL,KAAM,KACrBS,EAAUK,MAAMC,gBAAkB,iCAGV,KAAtBX,KAAKR,MAAMC,QACbe,EAAYE,MAAME,QAAU,QAC5BP,EAAUK,MAAMC,gBAAkB,iCAElCH,EAAYE,MAAME,QAAU,OAGJ,KAAtBZ,KAAKR,MAAME,QACbe,EAAYC,MAAME,QAAU,QAC5BP,EAAUK,MAAMC,gBAAkB,iCAElCF,EAAYC,MAAME,QAAU,QAG1BC,MAAMlB,IAAgC,KAAtBK,KAAKR,MAAMC,QAAuC,KAAtBO,KAAKR,MAAME,UACzDC,EAAQ,GACRK,KAAKC,SAAS,CAACN,MAAOA,IACtBK,KAAKC,SAAS,CAACL,KAAM,Q,oBAIzB,WAAU,IAAD,OACP,OACE,qBAAKkB,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,gDACA,uBAAMC,SAAU,SAAClB,GAAD,OAAW,EAAKmB,aAAanB,IAA7C,UACE,uBAAOoB,QAAQ,SAAf,wCACA,uBAAOrB,KAAK,SAASsB,KAAK,SAASC,KAAK,MAAMC,SAAU,SAACvB,GAAD,OAAW,EAAKwB,aAAaxB,MACrF,mBAAGyB,GAAG,eAAN,+BACA,uBAAOL,QAAQ,SAAf,wCACA,uBAAOrB,KAAK,SAASsB,KAAK,SAASC,KAAK,MAAMC,SAAU,SAACvB,GAAD,OAAW,EAAK0B,aAAa1B,MACrF,mBAAGyB,GAAG,eAAN,+BACA,uBAAOA,GAAG,gBAAgB1B,KAAK,SAASG,MAAM,iBAEhD,sBAAKuB,GAAG,SAAR,UACE,sCAAQ,+BAAOtB,KAAKR,MAAMG,WAC1B,2CAAa,+BAAOK,KAAKR,MAAMI,sB,GAtFzB4B,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASgC,eAAe,SAM1BZ,M","file":"static/js/main.09c8db41.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      height: \"\",\n      weight: \"\",\n      total: \"\",\n      type: \"\"\n    }\n  }\n\n  handleHeight(event) {\n    const height = event.target.value;\n    this.setState({height: height});\n  }\n\n  handleWeight(event) {\n    const weight = event.target.value;\n    this.setState({weight: weight});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    let total = this.state.weight / (this.state.height * this.state.height);\n    let totalPrecision = total.toPrecision(4);\n    this.setState({total: totalPrecision});\n\n    let wallpaper = document.querySelector('body');\n    let heightEnter = document.querySelector('#height-enter');\n    let weightEnter = document.querySelector('#weight-enter');\n\n    if (totalPrecision <= 18.5) {\n      this.setState({type: \"Underweight\"});\n      wallpaper.style.backgroundImage = 'linear-gradient(blue, lightblue)';\n    } else if (totalPrecision > 18.5 && totalPrecision <= 24.9) {\n      this.setState({type: \"Healthy Weight\"});\n      wallpaper.style.backgroundImage = 'linear-gradient(green, yellow)';\n    } else if (totalPrecision >= 25 && totalPrecision <= 29.9) {\n      this.setState({type: \"Overweight\"});\n      wallpaper.style.backgroundImage = 'linear-gradient(orange, yellow)';\n    } else if (totalPrecision >= 30) {\n      this.setState({type: \"Obese\"});\n      wallpaper.style.backgroundImage = 'linear-gradient(red, orange)';\n    } else {\n      this.setState({type: \"\"});\n      wallpaper.style.backgroundImage = 'linear-gradient(beige, white)';\n    }\n\n    if (this.state.height === \"\") {\n      heightEnter.style.display = 'block';\n      wallpaper.style.backgroundImage = 'linear-gradient(beige, white)';\n    } else {\n      heightEnter.style.display = 'none';\n    }\n\n    if (this.state.weight === \"\") {\n      weightEnter.style.display = 'block';\n      wallpaper.style.backgroundImage = 'linear-gradient(beige, white)';\n    } else {\n      weightEnter.style.display = 'none';\n    }\n\n    if (isNaN(total) || this.state.height === \"\" || this.state.weight === \"\") {\n      total = \"\";\n      this.setState({total: total});\n      this.setState({type: \"\"});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calculator\">\n          <h1>BMI Calculator</h1>\n          <form onSubmit={(event) => this.handleSubmit(event)}>\n            <label htmlFor=\"height\">Height (metres ex: 1.755):</label>\n            <input type=\"number\" name=\"height\" step=\"any\" onChange={(event) => this.handleHeight(event)} />\n            <p id=\"height-enter\">Enter your Height</p>\n            <label htmlFor=\"weight\">Weight (kilograms ex: 70):</label>\n            <input type=\"number\" name=\"weight\" step=\"any\" onChange={(event) => this.handleWeight(event)} />\n            <p id=\"weight-enter\">Enter your Weight</p>\n            <input id=\"submit-button\" type=\"submit\" value=\"Calculate\"/>\n          </form>\n          <div id=\"result\">\n            <p>BMI: <span>{this.state.total}</span></p>\n            <p>Category: <span>{this.state.type}</span></p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}